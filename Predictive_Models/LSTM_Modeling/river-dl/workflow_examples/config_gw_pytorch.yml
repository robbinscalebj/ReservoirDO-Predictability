# Input file
obs_file: "../data_DRB/Obs_temp_flow_drb_Christiana_no3558"
sntemp_file: "../data_DRB/sntemp_inputs_outputs_drb_Christiana_no3558"
dist_matrix_file: "../data_DRB/distance_matrix_drb_Christiana_no3558.npz"
reach_attr_file: "../data_DRB/reach_attributes_drb.csv"


out_dir: "output_test_gw_pytorch"

code_dir: ".."


#x_vars: ['seg_ccov', 'seg_elev', 'seg_length', 'seg_rain', 'seg_slope', 'seg_tave_air', 'seg_tave_gw', 'seg_tave_ss', 'seg_tave_upstream', 'seg_upstream_inflow', 'seg_width', 'seginc_gwflow', 'seginc_potet', 'seginc_sroff', 'seginc_ssflow', 'seginc_swrad','seg_outflow','seg_width_mean'] #full list of options
#x_vars: ['seg_slope','seg_elev','seg_width_mean','seg_tave_air','seginc_swrad','seg_rain','seginc_potet'] #current base model variables
x_vars: ['seg_ccov', 'seg_rain', 'seg_slope', 'seg_tave_air'] #code testing list

y_vars_pretrain: ['seg_tave_water']
y_vars_finetune: ['temp_c']
#y_vars_pretrain: ['seg_tave_water', 'seg_outflow']^M
##y_vars_finetune: ['temp_c', 'discharge_cms']^M

extraResSegments: [2005,1565,1571] #segments influenced by reservoirs that aren't included in the reach attributes list

seed: 1234 #random seed for training False==No seed, otherwise specify the seed
dropout: 0
recurrent_dropout: 0.3

#Choose whether to use the final weights from the end of training ('trained_weights') or the weights from the best
# validation epoch ('best_val_weights')
pred_weights: 'best_val_weights'

lambdas: [1]
#lambdas: [1,0]

#lambdas_gw are hyper params for weighting the rmses of Ar (amplitude ratio), deltaPhi (phase difference), and mean temperature
lambdas_gw: [0.5, 0.5, 0.5]

#gw loss calculation method, either 'fft' (fourier fast transform) !!! as if 2/22, the linalg option is not working !!! or 'linalg' (linear algebra)
gw_loss_type: 'fft'

#annual metric calculation method, either 'static' (uses all years in the partition, no temporal changes), 'batch' (calculated for each batch with sufficient data, other batches on those reaches use the averages of the batch calculations),'high_data_batches' (only calculated for batches with sufficient data),'low_data_years' (calculated only for batches with low data based on the averages of the high-data batches for those reaches)
metric_method: 'batch'

trn_offset: 1.0 
tst_val_offset: 1.0

#Define early stopping criteria, setting this to False will turn off early stopping rounds
early_stopping: False

train_start_date:
  - '1984-10-01'
  - '2015-10-01'
train_end_date:
  - '2010-09-30'
  - '2020-09-30'
val_start_date:
  - '1979-10-01'
  - '2010-10-01'
  - '2020-10-01'
val_end_date:
  - '1984-09-30'
  - '2015-09-30'
  - '2021-09-30'
test_start_date:
  - '1980-10-01'
  - '2020-10-01'
test_end_date:
  - '1985-09-30'
  - '2021-09-30'


pt_epochs: 5 
ft_epochs: 5

hidden_size: 20
pretrain_learning_rate: 0.005
finetune_learning_rate: 0.01

